{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\wwwroot\\\\react-native\\\\collex\\\\components\\\\WheelMy.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { WheelPicker, TimePicker, DatePicker } from \"react-native-wheel-picker-android\";\nimport React, { Component } from \"react\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nvar wheelPickerData = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\"];\nexport var WheelMy = function (_Component) {\n  _inherits(WheelMy, _Component);\n\n  var _super = _createSuper(WheelMy);\n\n  function WheelMy() {\n    var _this;\n\n    _classCallCheck(this, WheelMy);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      selectedItem: 0\n    };\n\n    _this.onItemSelected = function (selectedItem) {\n      _this.setState({\n        selectedItem: selectedItem\n      });\n    };\n\n    _this.onPress = function () {\n      _this.setState({\n        selectedItem: 3\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(WheelMy, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, React.createElement(Button, {\n        title: \"Select third element\",\n        onPress: this.onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }, \"Selected position: \", this.state.selectedItem), React.createElement(WheelPicker, {\n        selectedItem: this.state.selectedItem,\n        data: wheelPickerData,\n        onItemSelected: this.onItemSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return WheelMy;\n}(Component);","map":{"version":3,"sources":["D:/wwwroot/react-native/collex/components/WheelMy.js"],"names":["WheelPicker","TimePicker","DatePicker","React","Component","wheelPickerData","WheelMy","state","selectedItem","onItemSelected","setState","onPress","styles","container"],"mappings":";;;;;;;;;;;AAAA,SACIA,WADJ,EAEIC,UAFJ,EAGIC,UAHJ,QAIO,mCAJP;AAKA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAGA,IAAMC,eAAe,GAAG,CACpB,QADoB,EAEpB,QAFoB,EAGpB,SAHoB,EAIpB,WAJoB,EAKpB,UALoB,EAMpB,QANoB,CAAxB;AASA,WAAaC,OAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACIC,KADJ,GACY;AACJC,MAAAA,YAAY,EAAE;AADV,KADZ;;AAAA,UAKIC,cALJ,GAKqB,UAAAD,YAAY,EAAI;AAC7B,YAAKE,QAAL,CAAc;AAAEF,QAAAA,YAAY,EAAZA;AAAF,OAAd;AACH,KAPL;;AAAA,UASIG,OATJ,GASc,YAAM;AACZ,YAAKD,QAAL,CAAc;AAAEF,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACH,KAXL;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAaa;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEI,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,sBAAf;AAAuC,QAAA,OAAO,EAAE,KAAKF,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA0B,KAAKJ,KAAL,CAAWC,YAArC,CAFJ,EAGI,oBAAC,WAAD;AACI,QAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC,YAD7B;AAEI,QAAA,IAAI,EAAEH,eAFV;AAGI,QAAA,cAAc,EAAE,KAAKI,cAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ;AAWH;AAzBL;;AAAA;AAAA,EAA6BL,SAA7B","sourcesContent":["import {\r\n    WheelPicker,\r\n    TimePicker,\r\n    DatePicker\r\n} from \"react-native-wheel-picker-android\";\r\nimport React, { Component } from \"react\";\r\nimport { AppRegistry, StyleSheet, Text, View, Button } from \"react-native\";\r\n\r\nconst wheelPickerData = [\r\n    \"sunday\",\r\n    \"monday\",\r\n    \"tuesday\",\r\n    \"wednesday\",\r\n    \"thursday\",\r\n    \"friday\"\r\n];\r\n\r\nexport class WheelMy extends Component {\r\n    state = {\r\n        selectedItem: 0\r\n    };\r\n\r\n    onItemSelected = selectedItem => {\r\n        this.setState({ selectedItem });\r\n    };\r\n\r\n    onPress = () => {\r\n        this.setState({ selectedItem: 3 });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                <Button title={\"Select third element\"} onPress={this.onPress} />\r\n                <Text>Selected position: {this.state.selectedItem}</Text>\r\n                <WheelPicker\r\n                    selectedItem={this.state.selectedItem}\r\n                    data={wheelPickerData}\r\n                    onItemSelected={this.onItemSelected}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}