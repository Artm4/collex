{"ast":null,"code":"export var isEmpty = function isEmpty(x) {\n  if (typeof x === typeof \"\") x = x.replace(/\\s/g, \"\");\n  if (!x) return true;\n  if (x === \"\") return true;\n  if (x === {}) return true;\n  if (x === []) return true;\n  if (x == null) return true;\n  if (typeof x === \"undefined\") return true;\n  if (x === \"\") return true;\n  if (x === function () {}) return true;\n\n  if (typeof x === typeof {}) {\n    if (Object.entries(x).length === 0 && x.constructor === Object) {\n      return true;\n    }\n\n    for (var key in x) {\n      if (x.hasOwnProperty(key) && !isEmpty(x[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n};\nexport var debounce = function debounce(callback, wait) {\n  var timeout;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var context = this;\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      return callback.apply(context, args);\n    }, wait);\n    return timeout;\n  };\n};\nexport var isNumeric = function isNumeric(num) {\n  return num !== \"\" && num !== null && num !== false && !isNaN(parseFloat(num)) && !isNaN(num - 0);\n};","map":{"version":3,"sources":["D:/wwwroot/react-native/collex/node_modules/react-native-input-spinner/src/Utils.js"],"names":["isEmpty","x","replace","Object","entries","length","constructor","key","hasOwnProperty","debounce","callback","wait","timeout","args","context","clearTimeout","setTimeout","apply","isNumeric","num","isNaN","parseFloat"],"mappings":"AAKA,OAAO,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,CAAD,EAAO;AAC7B,MAAI,OAAOA,CAAP,KAAa,OAAO,EAAxB,EAA4BA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,KAAV,EAAiB,EAAjB,CAAJ;AAE5B,MAAI,CAACD,CAAL,EAAQ,OAAO,IAAP;AACR,MAAIA,CAAC,KAAK,EAAV,EAAc,OAAO,IAAP;AACd,MAAIA,CAAC,KAAK,EAAV,EAAc,OAAO,IAAP;AACd,MAAIA,CAAC,KAAK,EAAV,EAAc,OAAO,IAAP;AACd,MAAIA,CAAC,IAAI,IAAT,EAAe,OAAO,IAAP;AACf,MAAI,OAAOA,CAAP,KAAa,WAAjB,EAA8B,OAAO,IAAP;AAC9B,MAAIA,CAAC,KAAK,EAAV,EAAc,OAAO,IAAP;AACd,MAAIA,CAAC,KAAK,YAAY,CAAE,CAAxB,EAA0B,OAAO,IAAP;;AAE1B,MAAI,OAAOA,CAAP,KAAa,OAAO,EAAxB,EAA4B;AAC3B,QAAIE,MAAM,CAACC,OAAP,CAAeH,CAAf,EAAkBI,MAAlB,KAA6B,CAA7B,IAAkCJ,CAAC,CAACK,WAAF,KAAkBH,MAAxD,EAAgE;AAC/D,aAAO,IAAP;AACA;;AACD,SAAK,IAAII,GAAT,IAAgBN,CAAhB,EAAmB;AAClB,UAAIA,CAAC,CAACO,cAAF,CAAiBD,GAAjB,KAAyB,CAACP,OAAO,CAACC,CAAC,CAACM,GAAD,CAAF,CAArC,EAA+C;AAC9C,eAAO,KAAP;AACA;AACD;;AACD,WAAO,IAAP;AACA;;AACD,SAAO,KAAP;AACA,CAxBM;AAgCP,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD,EAAWC,IAAX,EAAoB;AAC3C,MAAIC,OAAJ;AACA,SAAO,YAAmB;AAAA,sCAANC,IAAM;AAANA,MAAAA,IAAM;AAAA;;AACzB,QAAMC,OAAO,GAAG,IAAhB;AACAC,IAAAA,YAAY,CAACH,OAAD,CAAZ;AACAA,IAAAA,OAAO,GAAGI,UAAU,CAAC;AAAA,aAAMN,QAAQ,CAACO,KAAT,CAAeH,OAAf,EAAwBD,IAAxB,CAAN;AAAA,KAAD,EAAsCF,IAAtC,CAApB;AACA,WAAOC,OAAP;AACA,GALD;AAMA,CARM;AAeP,OAAO,IAAMM,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAS;AACjC,SACCA,GAAG,KAAK,EAAR,IACAA,GAAG,KAAK,IADR,IAEAA,GAAG,KAAK,KAFR,IAGA,CAACC,KAAK,CAACC,UAAU,CAACF,GAAD,CAAX,CAHN,IAIA,CAACC,KAAK,CAACD,GAAG,GAAG,CAAP,CALP;AAOA,CARM","sourcesContent":["/**\n * Is empty\n * @param x\n * @returns {boolean}\n */\nexport const isEmpty = (x) => {\n\tif (typeof x === typeof \"\") x = x.replace(/\\s/g, \"\");\n\n\tif (!x) return true;\n\tif (x === \"\") return true;\n\tif (x === {}) return true;\n\tif (x === []) return true;\n\tif (x == null) return true;\n\tif (typeof x === \"undefined\") return true;\n\tif (x === \"\") return true;\n\tif (x === function () {}) return true;\n\n\tif (typeof x === typeof {}) {\n\t\tif (Object.entries(x).length === 0 && x.constructor === Object) {\n\t\t\treturn true;\n\t\t}\n\t\tfor (let key in x) {\n\t\t\tif (x.hasOwnProperty(key) && !isEmpty(x[key])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n/**\n * Debounce\n * @param callback\n * @param wait\n * @returns {function(...[*]=): void}\n */\nexport const debounce = (callback, wait) => {\n\tlet timeout;\n\treturn function (...args) {\n\t\tconst context = this;\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(() => callback.apply(context, args), wait);\n\t\treturn timeout;\n\t};\n};\n\n/**\n * Detect if is a numeric value\n * @param num\n * @returns {boolean}\n */\nexport const isNumeric = (num) => {\n\treturn (\n\t\tnum !== \"\" &&\n\t\tnum !== null &&\n\t\tnum !== false &&\n\t\t!isNaN(parseFloat(num)) &&\n\t\t!isNaN(num - 0)\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}